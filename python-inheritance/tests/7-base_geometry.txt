The ``7-base_geometry`` module
==============================

Using ``BaseGeometry``
----------------------

Import the class:

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now test it:

    >>> bg = BaseGeometry()

Test the area() method:

    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

Test integer_validator() with valid inputs:

    >>> bg.integer_validator("my_int", 12)
    >>> bg.integer_validator("width", 89)

Test integer_validator() with invalid types:

    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ValueError: age must be greater than 0

    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
    ValueError: distance must be greater than 0

Test integer_validator() with non-integer types:

    >>> bg.integer_validator("average", 7.8)
    Traceback (most recent call last):
    TypeError: average must be an integer

    >>> bg.integer_validator("boolean", True)
    Traceback (most recent call last):
    TypeError: boolean must be an integer

    >>> bg.integer_validator("complex", 1+2j)
    Traceback (most recent call last):
    TypeError: complex must be an integer

Test integer_validator() with no arguments:

    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Test integer_validator() with only one argument:

    >>> bg.integer_validator("age")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

Test integer_validator() with too many arguments:

    >>> bg.integer_validator("age", 18, 19)
    Traceback (most recent call last):
    TypeError: integer_validator() takes 3 positional arguments but 4 were given

Test integer_validator() with additional non-integer types:

    >>> bg.integer_validator("age", (4,))
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> bg.integer_validator("age", [3])
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> bg.integer_validator("age", True)
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> bg.integer_validator("age", {3, 4})
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
    TypeError: age must be an integer
